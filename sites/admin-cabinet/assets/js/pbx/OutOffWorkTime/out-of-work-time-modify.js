"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2020 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl,globalTranslate, Extensions, Form, SemanticLocalization, SoundFilesSelector */
$.fn.form.settings.rules.customNotEmptyIfActionRule = function (value, action) {
  if (value.length === 0 && $('#action').val() === action) {
    return false;
  }

  return true;
};

var outOfWorkTimeRecord = {
  $formObj: $('#save-outoffwork-form'),
  $defaultDropdown: $('#save-outoffwork-form .dropdown-default'),
  $rangeDaysStart: $('#range-days-start'),
  $rangeDaysEnd: $('#range-days-end'),
  $rangeTimeStart: $('#range-time-start'),
  $rangeTimeEnd: $('#range-time-end'),
  $date_from: $('#date_from'),
  $date_to: $('#date_to'),
  $time_to: $('#time_to'),
  $forwardingSelectDropdown: $('#save-outoffwork-form .forwarding-select'),
  validateRules: {
    audio_message_id: {
      identifier: 'audio_message_id',
      rules: [{
        type: 'customNotEmptyIfActionRule[playmessage]',
        prompt: globalTranslate.tf_ValidateAudioMessageEmpty
      }]
    },
    extension: {
      identifier: 'extension',
      rules: [{
        type: 'customNotEmptyIfActionRule[extension]',
        prompt: globalTranslate.tf_ValidateExtensionEmpty
      }]
    },
    timefrom: {
      optional: true,
      identifier: 'time_from',
      rules: [{
        type: 'regExp',
        value: /^(2[0-3]|1?[0-9]):([0-5]?[0-9])$/,
        prompt: globalTranslate.tf_ValidateCheckTimeInterval
      }]
    },
    timeto: {
      identifier: 'time_to',
      optional: true,
      rules: [{
        type: 'regExp',
        value: /^(2[0-3]|1?[0-9]):([0-5]?[0-9])$/,
        prompt: globalTranslate.tf_ValidateCheckTimeInterval
      }]
    }
  },
  initialize: function initialize() {
    outOfWorkTimeRecord.$defaultDropdown.dropdown();
    outOfWorkTimeRecord.$rangeDaysStart.calendar({
      firstDayOfWeek: SemanticLocalization.calendarFirstDayOfWeek,
      text: SemanticLocalization.calendarText,
      endCalendar: outOfWorkTimeRecord.$rangeDaysEnd,
      type: 'date',
      inline: false,
      monthFirst: false,
      regExp: SemanticLocalization.regExp
    });
    outOfWorkTimeRecord.$rangeDaysEnd.calendar({
      firstDayOfWeek: SemanticLocalization.calendarFirstDayOfWeek,
      text: SemanticLocalization.calendarText,
      startCalendar: outOfWorkTimeRecord.$rangeDaysStart,
      type: 'date',
      inline: false,
      monthFirst: false,
      regExp: SemanticLocalization.regExp,
      onChange: function onChange(newDateTo) {
        var oldDateTo = outOfWorkTimeRecord.$date_to.attr('value');

        if (newDateTo !== null && oldDateTo !== '') {
          oldDateTo = new Date(oldDateTo * 1000);

          if (newDateTo - oldDateTo !== 0) {
            outOfWorkTimeRecord.$date_from.trigger('change');
          }
        }
      }
    });
    outOfWorkTimeRecord.$rangeTimeStart.calendar({
      firstDayOfWeek: SemanticLocalization.calendarFirstDayOfWeek,
      text: SemanticLocalization.calendarText,
      endCalendar: outOfWorkTimeRecord.$rangeTimeEnd,
      type: 'time',
      inline: false,
      disableMinute: true,
      ampm: false
    });
    outOfWorkTimeRecord.$rangeTimeEnd.calendar({
      firstDayOfWeek: SemanticLocalization.calendarFirstDayOfWeek,
      text: SemanticLocalization.calendarText,
      startCalendar: outOfWorkTimeRecord.$rangeTimeStart,
      type: 'time',
      inline: false,
      disableMinute: true,
      ampm: false,
      onChange: function onChange(newTimeTo) {
        var oldTimeTo = outOfWorkTimeRecord.$time_to.attr('value');

        if (newTimeTo !== null && oldTimeTo !== '') {
          oldTimeTo = new Date(oldTimeTo * 1000);

          if (newTimeTo - oldTimeTo !== 0) {
            outOfWorkTimeRecord.$time_to.trigger('change');
          }
        }
      }
    });
    $('#action').dropdown({
      onChange: function onChange() {
        outOfWorkTimeRecord.toggleDisabledFieldClass();
      }
    });
    $('#weekday_from').dropdown({
      onChange: function onChange() {
        var from = outOfWorkTimeRecord.$formObj.form('get value', 'weekday_from');
        var to = outOfWorkTimeRecord.$formObj.form('get value', 'weekday_to');

        if (from < to || to === -1 || from === -1) {
          outOfWorkTimeRecord.$formObj.form('set value', 'weekday_to', from);
        }
      }
    });
    $('#weekday_to').dropdown({
      onChange: function onChange() {
        var from = outOfWorkTimeRecord.$formObj.form('get value', 'weekday_from');
        var to = outOfWorkTimeRecord.$formObj.form('get value', 'weekday_to');

        if (to < from || from === -1) {
          outOfWorkTimeRecord.$formObj.form('set value', 'weekday_from', to);
        }
      }
    });
    $('#erase-dates').on('click', function (e) {
      outOfWorkTimeRecord.$rangeDaysStart.calendar('clear');
      outOfWorkTimeRecord.$rangeDaysEnd.calendar('clear');
      outOfWorkTimeRecord.$formObj.form('set values', {
        date_from: '',
        date_to: ''
      });
      e.preventDefault();
    });
    $('#erase-weekdays').on('click', function (e) {
      outOfWorkTimeRecord.$formObj.form('set values', {
        weekday_from: -1,
        weekday_to: -1
      });
      outOfWorkTimeRecord.$rangeDaysStart.trigger('change');
      e.preventDefault();
    });
    $('#erase-timeperiod').on('click', function (e) {
      outOfWorkTimeRecord.$rangeTimeStart.calendar('clear');
      outOfWorkTimeRecord.$rangeTimeEnd.calendar('clear');
      outOfWorkTimeRecord.$time_to.trigger('change');
      e.preventDefault();
    });
    $('#save-outoffwork-form .audio-message-select').dropdown(SoundFilesSelector.getDropdownSettingsWithEmpty());
    outOfWorkTimeRecord.initializeForm();
    outOfWorkTimeRecord.$forwardingSelectDropdown.dropdown(Extensions.getDropdownSettingsWithoutEmpty());
    outOfWorkTimeRecord.toggleDisabledFieldClass();
    outOfWorkTimeRecord.changeDateFormat();
  },

  /**
   * Меняет представление даты начала и даты окончания из linuxtime в локальное представление
   */
  changeDateFormat: function changeDateFormat() {
    var dateFrom = outOfWorkTimeRecord.$date_from.attr('value');
    var dateTo = outOfWorkTimeRecord.$date_to.attr('value');

    if (dateFrom !== undefined && dateFrom.length > 0) {
      outOfWorkTimeRecord.$rangeDaysStart.calendar('set date', new Date(dateFrom * 1000)); // outOfWorkTimeRecord.$formObj.form('set value', 'date_from', dateFrom);
    }

    if (dateTo !== undefined && dateTo.length > 0) {
      outOfWorkTimeRecord.$rangeDaysEnd.calendar('set date', new Date(dateTo * 1000)); // outOfWorkTimeRecord.$formObj.form('set value', 'date_to', dateTo);
    }
  },
  toggleDisabledFieldClass: function toggleDisabledFieldClass() {
    if (outOfWorkTimeRecord.$formObj.form('get value', 'action') === 'extension') {
      $('#extension-group').show();
      $('#audio-file-group').hide();
      $('#audio_message_id').dropdown('clear');
    } else {
      $('#extension-group').hide();
      $('#audio-file-group').show();
      outOfWorkTimeRecord.$formObj.form('set value', 'extension', -1);
    }
  },

  /**
   * Кастомная проверка полей формы, которые не получается сделать через валидацию
   * @param result
   * @returns {*}
   */
  customValidateForm: function customValidateForm(result) {
    // Проверим поля даты
    if (result.data.date_from !== '' && result.data.date_to === '' || result.data.date_to !== '' && result.data.date_from === '') {
      $('.form .error.message').html(globalTranslate.tf_ValidateCheckDateInterval).show();
      Form.$submitButton.transition('shake').removeClass('loading disabled');
      return false;
    } // Проверим поля дней недели


    if (result.data.weekday_from > 0 && result.data.weekday_to === '-1' || result.data.weekday_to > 0 && result.data.weekday_from === '-1') {
      $('.form .error.message').html(globalTranslate.tf_ValidateCheckWeekDayInterval).show();
      Form.$submitButton.transition('shake').removeClass('loading disabled');
      return false;
    } // Проверим поля времени


    if (result.data.time_from.length > 0 && result.data.time_to.length === 0 || result.data.time_to.length > 0 && result.data.time_from.length === 0) {
      $('.form .error.message').html(globalTranslate.tf_ValidateCheckTimeInterval).show();
      Form.$submitButton.transition('shake').removeClass('loading disabled');
      return false;
    } // Проверим поля времени на соблюдение формату


    if (result.data.time_from.length > 0 && result.data.time_to.length === 0 || result.data.time_to.length > 0 && result.data.time_from.length === 0) {
      $('.form .error.message').html(globalTranslate.tf_ValidateCheckTimeInterval).show();
      Form.$submitButton.transition('shake').removeClass('loading disabled');
      return false;
    } // Проверим все поля


    if (result.data.time_from === '' && result.data.time_to === '' && result.data.weekday_from === '-1' && result.data.weekday_to === '-1' && result.data.date_from === '' && result.data.date_to === '') {
      $('.form .error.message').html(globalTranslate.tf_ValidateNoRulesSelected).show();
      Form.$submitButton.transition('shake').removeClass('loading disabled');
      return false;
    }

    return result;
  },
  cbBeforeSendForm: function cbBeforeSendForm(settings) {
    var result = settings;
    $('.form .error.message').html('').hide();
    result.data = outOfWorkTimeRecord.$formObj.form('get values');
    var dateFrom = outOfWorkTimeRecord.$rangeDaysStart.calendar('get date');

    if (dateFrom !== null) {
      dateFrom.setHours(0, 0, 0, 0);
      result.data.date_from = Math.round(dateFrom.getTime() / 1000);
    }

    var dateTo = outOfWorkTimeRecord.$rangeDaysEnd.calendar('get date');

    if (dateTo !== null) {
      dateTo.setHours(23, 59, 59, 0);
      result.data.date_to = Math.round(dateTo.getTime() / 1000);
    }

    return outOfWorkTimeRecord.customValidateForm(result);
  },
  cbAfterSendForm: function cbAfterSendForm() {},
  initializeForm: function initializeForm() {
    Form.$formObj = outOfWorkTimeRecord.$formObj;
    Form.url = "".concat(globalRootUrl, "out-off-work-time/save");
    Form.validateRules = outOfWorkTimeRecord.validateRules;
    Form.cbBeforeSendForm = outOfWorkTimeRecord.cbBeforeSendForm;
    Form.cbAfterSendForm = outOfWorkTimeRecord.cbAfterSendForm;
    Form.initialize();
  }
};
$(document).ready(function () {
  outOfWorkTimeRecord.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PdXRPZmZXb3JrVGltZS9vdXQtb2Ytd29yay10aW1lLW1vZGlmeS5qcyJdLCJuYW1lcyI6WyIkIiwiZm4iLCJmb3JtIiwic2V0dGluZ3MiLCJydWxlcyIsImN1c3RvbU5vdEVtcHR5SWZBY3Rpb25SdWxlIiwidmFsdWUiLCJhY3Rpb24iLCJsZW5ndGgiLCJ2YWwiLCJvdXRPZldvcmtUaW1lUmVjb3JkIiwiJGZvcm1PYmoiLCIkZGVmYXVsdERyb3Bkb3duIiwiJHJhbmdlRGF5c1N0YXJ0IiwiJHJhbmdlRGF5c0VuZCIsIiRyYW5nZVRpbWVTdGFydCIsIiRyYW5nZVRpbWVFbmQiLCIkZGF0ZV9mcm9tIiwiJGRhdGVfdG8iLCIkdGltZV90byIsIiRmb3J3YXJkaW5nU2VsZWN0RHJvcGRvd24iLCJ2YWxpZGF0ZVJ1bGVzIiwiYXVkaW9fbWVzc2FnZV9pZCIsImlkZW50aWZpZXIiLCJ0eXBlIiwicHJvbXB0IiwiZ2xvYmFsVHJhbnNsYXRlIiwidGZfVmFsaWRhdGVBdWRpb01lc3NhZ2VFbXB0eSIsImV4dGVuc2lvbiIsInRmX1ZhbGlkYXRlRXh0ZW5zaW9uRW1wdHkiLCJ0aW1lZnJvbSIsIm9wdGlvbmFsIiwidGZfVmFsaWRhdGVDaGVja1RpbWVJbnRlcnZhbCIsInRpbWV0byIsImluaXRpYWxpemUiLCJkcm9wZG93biIsImNhbGVuZGFyIiwiZmlyc3REYXlPZldlZWsiLCJTZW1hbnRpY0xvY2FsaXphdGlvbiIsImNhbGVuZGFyRmlyc3REYXlPZldlZWsiLCJ0ZXh0IiwiY2FsZW5kYXJUZXh0IiwiZW5kQ2FsZW5kYXIiLCJpbmxpbmUiLCJtb250aEZpcnN0IiwicmVnRXhwIiwic3RhcnRDYWxlbmRhciIsIm9uQ2hhbmdlIiwibmV3RGF0ZVRvIiwib2xkRGF0ZVRvIiwiYXR0ciIsIkRhdGUiLCJ0cmlnZ2VyIiwiZGlzYWJsZU1pbnV0ZSIsImFtcG0iLCJuZXdUaW1lVG8iLCJvbGRUaW1lVG8iLCJ0b2dnbGVEaXNhYmxlZEZpZWxkQ2xhc3MiLCJmcm9tIiwidG8iLCJvbiIsImUiLCJkYXRlX2Zyb20iLCJkYXRlX3RvIiwicHJldmVudERlZmF1bHQiLCJ3ZWVrZGF5X2Zyb20iLCJ3ZWVrZGF5X3RvIiwiU291bmRGaWxlc1NlbGVjdG9yIiwiZ2V0RHJvcGRvd25TZXR0aW5nc1dpdGhFbXB0eSIsImluaXRpYWxpemVGb3JtIiwiRXh0ZW5zaW9ucyIsImdldERyb3Bkb3duU2V0dGluZ3NXaXRob3V0RW1wdHkiLCJjaGFuZ2VEYXRlRm9ybWF0IiwiZGF0ZUZyb20iLCJkYXRlVG8iLCJ1bmRlZmluZWQiLCJzaG93IiwiaGlkZSIsImN1c3RvbVZhbGlkYXRlRm9ybSIsInJlc3VsdCIsImRhdGEiLCJodG1sIiwidGZfVmFsaWRhdGVDaGVja0RhdGVJbnRlcnZhbCIsIkZvcm0iLCIkc3VibWl0QnV0dG9uIiwidHJhbnNpdGlvbiIsInJlbW92ZUNsYXNzIiwidGZfVmFsaWRhdGVDaGVja1dlZWtEYXlJbnRlcnZhbCIsInRpbWVfZnJvbSIsInRpbWVfdG8iLCJ0Zl9WYWxpZGF0ZU5vUnVsZXNTZWxlY3RlZCIsImNiQmVmb3JlU2VuZEZvcm0iLCJzZXRIb3VycyIsIk1hdGgiLCJyb3VuZCIsImdldFRpbWUiLCJjYkFmdGVyU2VuZEZvcm0iLCJ1cmwiLCJnbG9iYWxSb290VXJsIiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBR0FBLENBQUMsQ0FBQ0MsRUFBRixDQUFLQyxJQUFMLENBQVVDLFFBQVYsQ0FBbUJDLEtBQW5CLENBQXlCQywwQkFBekIsR0FBc0QsVUFBQ0MsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ3hFLE1BQUlELEtBQUssQ0FBQ0UsTUFBTixLQUFpQixDQUFqQixJQUFzQlIsQ0FBQyxDQUFDLFNBQUQsQ0FBRCxDQUFhUyxHQUFiLE9BQXVCRixNQUFqRCxFQUF5RDtBQUN4RCxXQUFPLEtBQVA7QUFDQTs7QUFDRCxTQUFPLElBQVA7QUFDQSxDQUxEOztBQU9BLElBQU1HLG1CQUFtQixHQUFHO0FBQzNCQyxFQUFBQSxRQUFRLEVBQUVYLENBQUMsQ0FBQyx1QkFBRCxDQURnQjtBQUUzQlksRUFBQUEsZ0JBQWdCLEVBQUVaLENBQUMsQ0FBQyx5Q0FBRCxDQUZRO0FBRzNCYSxFQUFBQSxlQUFlLEVBQUViLENBQUMsQ0FBQyxtQkFBRCxDQUhTO0FBSTNCYyxFQUFBQSxhQUFhLEVBQUVkLENBQUMsQ0FBQyxpQkFBRCxDQUpXO0FBSzNCZSxFQUFBQSxlQUFlLEVBQUVmLENBQUMsQ0FBQyxtQkFBRCxDQUxTO0FBTTNCZ0IsRUFBQUEsYUFBYSxFQUFFaEIsQ0FBQyxDQUFDLGlCQUFELENBTlc7QUFPM0JpQixFQUFBQSxVQUFVLEVBQUVqQixDQUFDLENBQUMsWUFBRCxDQVBjO0FBUTNCa0IsRUFBQUEsUUFBUSxFQUFFbEIsQ0FBQyxDQUFDLFVBQUQsQ0FSZ0I7QUFTM0JtQixFQUFBQSxRQUFRLEVBQUVuQixDQUFDLENBQUMsVUFBRCxDQVRnQjtBQVUzQm9CLEVBQUFBLHlCQUF5QixFQUFFcEIsQ0FBQyxDQUFDLDBDQUFELENBVkQ7QUFXM0JxQixFQUFBQSxhQUFhLEVBQUU7QUFDZEMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFDakJDLE1BQUFBLFVBQVUsRUFBRSxrQkFESztBQUVqQm5CLE1BQUFBLEtBQUssRUFBRSxDQUNOO0FBQ0NvQixRQUFBQSxJQUFJLEVBQUUseUNBRFA7QUFFQ0MsUUFBQUEsTUFBTSxFQUFFQyxlQUFlLENBQUNDO0FBRnpCLE9BRE07QUFGVSxLQURKO0FBVWRDLElBQUFBLFNBQVMsRUFBRTtBQUNWTCxNQUFBQSxVQUFVLEVBQUUsV0FERjtBQUVWbkIsTUFBQUEsS0FBSyxFQUFFLENBQ047QUFDQ29CLFFBQUFBLElBQUksRUFBRSx1Q0FEUDtBQUVDQyxRQUFBQSxNQUFNLEVBQUVDLGVBQWUsQ0FBQ0c7QUFGekIsT0FETTtBQUZHLEtBVkc7QUFtQmRDLElBQUFBLFFBQVEsRUFBRTtBQUNUQyxNQUFBQSxRQUFRLEVBQUUsSUFERDtBQUVUUixNQUFBQSxVQUFVLEVBQUUsV0FGSDtBQUdUbkIsTUFBQUEsS0FBSyxFQUFFLENBQUM7QUFDUG9CLFFBQUFBLElBQUksRUFBRSxRQURDO0FBRVBsQixRQUFBQSxLQUFLLEVBQUUsa0NBRkE7QUFHUG1CLFFBQUFBLE1BQU0sRUFBRUMsZUFBZSxDQUFDTTtBQUhqQixPQUFEO0FBSEUsS0FuQkk7QUE0QmRDLElBQUFBLE1BQU0sRUFBRTtBQUNQVixNQUFBQSxVQUFVLEVBQUUsU0FETDtBQUVQUSxNQUFBQSxRQUFRLEVBQUUsSUFGSDtBQUdQM0IsTUFBQUEsS0FBSyxFQUFFLENBQUM7QUFDUG9CLFFBQUFBLElBQUksRUFBRSxRQURDO0FBRVBsQixRQUFBQSxLQUFLLEVBQUUsa0NBRkE7QUFHUG1CLFFBQUFBLE1BQU0sRUFBRUMsZUFBZSxDQUFDTTtBQUhqQixPQUFEO0FBSEE7QUE1Qk0sR0FYWTtBQWlEM0JFLEVBQUFBLFVBakQyQix3QkFpRGQ7QUFDWnhCLElBQUFBLG1CQUFtQixDQUFDRSxnQkFBcEIsQ0FBcUN1QixRQUFyQztBQUNBekIsSUFBQUEsbUJBQW1CLENBQUNHLGVBQXBCLENBQW9DdUIsUUFBcEMsQ0FBNkM7QUFDNUNDLE1BQUFBLGNBQWMsRUFBRUMsb0JBQW9CLENBQUNDLHNCQURPO0FBRTVDQyxNQUFBQSxJQUFJLEVBQUVGLG9CQUFvQixDQUFDRyxZQUZpQjtBQUc1Q0MsTUFBQUEsV0FBVyxFQUFFaEMsbUJBQW1CLENBQUNJLGFBSFc7QUFJNUNVLE1BQUFBLElBQUksRUFBRSxNQUpzQztBQUs1Q21CLE1BQUFBLE1BQU0sRUFBRSxLQUxvQztBQU01Q0MsTUFBQUEsVUFBVSxFQUFFLEtBTmdDO0FBTzVDQyxNQUFBQSxNQUFNLEVBQUVQLG9CQUFvQixDQUFDTztBQVBlLEtBQTdDO0FBU0FuQyxJQUFBQSxtQkFBbUIsQ0FBQ0ksYUFBcEIsQ0FBa0NzQixRQUFsQyxDQUEyQztBQUMxQ0MsTUFBQUEsY0FBYyxFQUFFQyxvQkFBb0IsQ0FBQ0Msc0JBREs7QUFFMUNDLE1BQUFBLElBQUksRUFBRUYsb0JBQW9CLENBQUNHLFlBRmU7QUFHMUNLLE1BQUFBLGFBQWEsRUFBRXBDLG1CQUFtQixDQUFDRyxlQUhPO0FBSTFDVyxNQUFBQSxJQUFJLEVBQUUsTUFKb0M7QUFLMUNtQixNQUFBQSxNQUFNLEVBQUUsS0FMa0M7QUFNMUNDLE1BQUFBLFVBQVUsRUFBRSxLQU44QjtBQU8xQ0MsTUFBQUEsTUFBTSxFQUFFUCxvQkFBb0IsQ0FBQ08sTUFQYTtBQVExQ0UsTUFBQUEsUUFBUSxFQUFFLGtCQUFDQyxTQUFELEVBQWU7QUFDeEIsWUFBSUMsU0FBUyxHQUFHdkMsbUJBQW1CLENBQUNRLFFBQXBCLENBQTZCZ0MsSUFBN0IsQ0FBa0MsT0FBbEMsQ0FBaEI7O0FBQ0EsWUFBSUYsU0FBUyxLQUFLLElBQWQsSUFBc0JDLFNBQVMsS0FBSyxFQUF4QyxFQUE0QztBQUMzQ0EsVUFBQUEsU0FBUyxHQUFHLElBQUlFLElBQUosQ0FBU0YsU0FBUyxHQUFHLElBQXJCLENBQVo7O0FBQ0EsY0FBS0QsU0FBUyxHQUFHQyxTQUFiLEtBQTRCLENBQWhDLEVBQW1DO0FBQ2xDdkMsWUFBQUEsbUJBQW1CLENBQUNPLFVBQXBCLENBQStCbUMsT0FBL0IsQ0FBdUMsUUFBdkM7QUFDQTtBQUNEO0FBQ0Q7QUFoQnlDLEtBQTNDO0FBa0JBMUMsSUFBQUEsbUJBQW1CLENBQUNLLGVBQXBCLENBQW9DcUIsUUFBcEMsQ0FBNkM7QUFDNUNDLE1BQUFBLGNBQWMsRUFBRUMsb0JBQW9CLENBQUNDLHNCQURPO0FBRTVDQyxNQUFBQSxJQUFJLEVBQUVGLG9CQUFvQixDQUFDRyxZQUZpQjtBQUc1Q0MsTUFBQUEsV0FBVyxFQUFFaEMsbUJBQW1CLENBQUNNLGFBSFc7QUFJNUNRLE1BQUFBLElBQUksRUFBRSxNQUpzQztBQUs1Q21CLE1BQUFBLE1BQU0sRUFBRSxLQUxvQztBQU01Q1UsTUFBQUEsYUFBYSxFQUFFLElBTjZCO0FBTzVDQyxNQUFBQSxJQUFJLEVBQUU7QUFQc0MsS0FBN0M7QUFTQTVDLElBQUFBLG1CQUFtQixDQUFDTSxhQUFwQixDQUFrQ29CLFFBQWxDLENBQTJDO0FBQzFDQyxNQUFBQSxjQUFjLEVBQUVDLG9CQUFvQixDQUFDQyxzQkFESztBQUUxQ0MsTUFBQUEsSUFBSSxFQUFFRixvQkFBb0IsQ0FBQ0csWUFGZTtBQUcxQ0ssTUFBQUEsYUFBYSxFQUFFcEMsbUJBQW1CLENBQUNLLGVBSE87QUFJMUNTLE1BQUFBLElBQUksRUFBRSxNQUpvQztBQUsxQ21CLE1BQUFBLE1BQU0sRUFBRSxLQUxrQztBQU0xQ1UsTUFBQUEsYUFBYSxFQUFFLElBTjJCO0FBTzFDQyxNQUFBQSxJQUFJLEVBQUUsS0FQb0M7QUFRMUNQLE1BQUFBLFFBQVEsRUFBRSxrQkFBQ1EsU0FBRCxFQUFlO0FBQ3hCLFlBQUlDLFNBQVMsR0FBRzlDLG1CQUFtQixDQUFDUyxRQUFwQixDQUE2QitCLElBQTdCLENBQWtDLE9BQWxDLENBQWhCOztBQUNBLFlBQUlLLFNBQVMsS0FBSyxJQUFkLElBQXNCQyxTQUFTLEtBQUssRUFBeEMsRUFBNEM7QUFDM0NBLFVBQUFBLFNBQVMsR0FBRyxJQUFJTCxJQUFKLENBQVNLLFNBQVMsR0FBRyxJQUFyQixDQUFaOztBQUNBLGNBQUtELFNBQVMsR0FBR0MsU0FBYixLQUE0QixDQUFoQyxFQUFtQztBQUNsQzlDLFlBQUFBLG1CQUFtQixDQUFDUyxRQUFwQixDQUE2QmlDLE9BQTdCLENBQXFDLFFBQXJDO0FBQ0E7QUFDRDtBQUNEO0FBaEJ5QyxLQUEzQztBQWtCQXBELElBQUFBLENBQUMsQ0FBQyxTQUFELENBQUQsQ0FDRW1DLFFBREYsQ0FDVztBQUNUWSxNQUFBQSxRQURTLHNCQUNFO0FBQ1ZyQyxRQUFBQSxtQkFBbUIsQ0FBQytDLHdCQUFwQjtBQUNBO0FBSFEsS0FEWDtBQU1BekQsSUFBQUEsQ0FBQyxDQUFDLGVBQUQsQ0FBRCxDQUNFbUMsUUFERixDQUNXO0FBQ1RZLE1BQUFBLFFBRFMsc0JBQ0U7QUFDVixZQUFNVyxJQUFJLEdBQUdoRCxtQkFBbUIsQ0FBQ0MsUUFBcEIsQ0FBNkJULElBQTdCLENBQWtDLFdBQWxDLEVBQStDLGNBQS9DLENBQWI7QUFDQSxZQUFNeUQsRUFBRSxHQUFHakQsbUJBQW1CLENBQUNDLFFBQXBCLENBQTZCVCxJQUE3QixDQUFrQyxXQUFsQyxFQUErQyxZQUEvQyxDQUFYOztBQUNBLFlBQUl3RCxJQUFJLEdBQUdDLEVBQVAsSUFBYUEsRUFBRSxLQUFLLENBQUMsQ0FBckIsSUFBMEJELElBQUksS0FBSyxDQUFDLENBQXhDLEVBQTJDO0FBQzFDaEQsVUFBQUEsbUJBQW1CLENBQUNDLFFBQXBCLENBQTZCVCxJQUE3QixDQUFrQyxXQUFsQyxFQUErQyxZQUEvQyxFQUE2RHdELElBQTdEO0FBQ0E7QUFDRDtBQVBRLEtBRFg7QUFVQTFELElBQUFBLENBQUMsQ0FBQyxhQUFELENBQUQsQ0FDRW1DLFFBREYsQ0FDVztBQUNUWSxNQUFBQSxRQURTLHNCQUNFO0FBQ1YsWUFBTVcsSUFBSSxHQUFHaEQsbUJBQW1CLENBQUNDLFFBQXBCLENBQTZCVCxJQUE3QixDQUFrQyxXQUFsQyxFQUErQyxjQUEvQyxDQUFiO0FBQ0EsWUFBTXlELEVBQUUsR0FBR2pELG1CQUFtQixDQUFDQyxRQUFwQixDQUE2QlQsSUFBN0IsQ0FBa0MsV0FBbEMsRUFBK0MsWUFBL0MsQ0FBWDs7QUFDQSxZQUFJeUQsRUFBRSxHQUFHRCxJQUFMLElBQWFBLElBQUksS0FBSyxDQUFDLENBQTNCLEVBQThCO0FBQzdCaEQsVUFBQUEsbUJBQW1CLENBQUNDLFFBQXBCLENBQTZCVCxJQUE3QixDQUFrQyxXQUFsQyxFQUErQyxjQUEvQyxFQUErRHlELEVBQS9EO0FBQ0E7QUFDRDtBQVBRLEtBRFg7QUFXQTNELElBQUFBLENBQUMsQ0FBQyxjQUFELENBQUQsQ0FBa0I0RCxFQUFsQixDQUFxQixPQUFyQixFQUE4QixVQUFDQyxDQUFELEVBQU87QUFDcENuRCxNQUFBQSxtQkFBbUIsQ0FBQ0csZUFBcEIsQ0FBb0N1QixRQUFwQyxDQUE2QyxPQUE3QztBQUNBMUIsTUFBQUEsbUJBQW1CLENBQUNJLGFBQXBCLENBQWtDc0IsUUFBbEMsQ0FBMkMsT0FBM0M7QUFDQTFCLE1BQUFBLG1CQUFtQixDQUFDQyxRQUFwQixDQUNFVCxJQURGLENBQ08sWUFEUCxFQUNxQjtBQUNuQjRELFFBQUFBLFNBQVMsRUFBRSxFQURRO0FBRW5CQyxRQUFBQSxPQUFPLEVBQUU7QUFGVSxPQURyQjtBQUtBRixNQUFBQSxDQUFDLENBQUNHLGNBQUY7QUFDQSxLQVREO0FBV0FoRSxJQUFBQSxDQUFDLENBQUMsaUJBQUQsQ0FBRCxDQUFxQjRELEVBQXJCLENBQXdCLE9BQXhCLEVBQWlDLFVBQUNDLENBQUQsRUFBTztBQUN2Q25ELE1BQUFBLG1CQUFtQixDQUFDQyxRQUFwQixDQUNFVCxJQURGLENBQ08sWUFEUCxFQUNxQjtBQUNuQitELFFBQUFBLFlBQVksRUFBRSxDQUFDLENBREk7QUFFbkJDLFFBQUFBLFVBQVUsRUFBRSxDQUFDO0FBRk0sT0FEckI7QUFLQXhELE1BQUFBLG1CQUFtQixDQUFDRyxlQUFwQixDQUFvQ3VDLE9BQXBDLENBQTRDLFFBQTVDO0FBQ0FTLE1BQUFBLENBQUMsQ0FBQ0csY0FBRjtBQUNBLEtBUkQ7QUFTQWhFLElBQUFBLENBQUMsQ0FBQyxtQkFBRCxDQUFELENBQXVCNEQsRUFBdkIsQ0FBMEIsT0FBMUIsRUFBbUMsVUFBQ0MsQ0FBRCxFQUFPO0FBQ3pDbkQsTUFBQUEsbUJBQW1CLENBQUNLLGVBQXBCLENBQW9DcUIsUUFBcEMsQ0FBNkMsT0FBN0M7QUFDQTFCLE1BQUFBLG1CQUFtQixDQUFDTSxhQUFwQixDQUFrQ29CLFFBQWxDLENBQTJDLE9BQTNDO0FBQ0ExQixNQUFBQSxtQkFBbUIsQ0FBQ1MsUUFBcEIsQ0FBNkJpQyxPQUE3QixDQUFxQyxRQUFyQztBQUNBUyxNQUFBQSxDQUFDLENBQUNHLGNBQUY7QUFDQSxLQUxEO0FBT0FoRSxJQUFBQSxDQUFDLENBQUMsNkNBQUQsQ0FBRCxDQUFpRG1DLFFBQWpELENBQTBEZ0Msa0JBQWtCLENBQUNDLDRCQUFuQixFQUExRDtBQUVBMUQsSUFBQUEsbUJBQW1CLENBQUMyRCxjQUFwQjtBQUNBM0QsSUFBQUEsbUJBQW1CLENBQUNVLHlCQUFwQixDQUE4Q2UsUUFBOUMsQ0FBdURtQyxVQUFVLENBQUNDLCtCQUFYLEVBQXZEO0FBQ0E3RCxJQUFBQSxtQkFBbUIsQ0FBQytDLHdCQUFwQjtBQUNBL0MsSUFBQUEsbUJBQW1CLENBQUM4RCxnQkFBcEI7QUFDQSxHQXJLMEI7O0FBc0szQjtBQUNEO0FBQ0E7QUFDQ0EsRUFBQUEsZ0JBeksyQiw4QkF5S1I7QUFDbEIsUUFBTUMsUUFBUSxHQUFHL0QsbUJBQW1CLENBQUNPLFVBQXBCLENBQStCaUMsSUFBL0IsQ0FBb0MsT0FBcEMsQ0FBakI7QUFDQSxRQUFNd0IsTUFBTSxHQUFHaEUsbUJBQW1CLENBQUNRLFFBQXBCLENBQTZCZ0MsSUFBN0IsQ0FBa0MsT0FBbEMsQ0FBZjs7QUFDQSxRQUFJdUIsUUFBUSxLQUFLRSxTQUFiLElBQTBCRixRQUFRLENBQUNqRSxNQUFULEdBQWtCLENBQWhELEVBQW1EO0FBQ2xERSxNQUFBQSxtQkFBbUIsQ0FBQ0csZUFBcEIsQ0FBb0N1QixRQUFwQyxDQUE2QyxVQUE3QyxFQUF5RCxJQUFJZSxJQUFKLENBQVNzQixRQUFRLEdBQUcsSUFBcEIsQ0FBekQsRUFEa0QsQ0FFbEQ7QUFDQTs7QUFDRCxRQUFJQyxNQUFNLEtBQUtDLFNBQVgsSUFBd0JELE1BQU0sQ0FBQ2xFLE1BQVAsR0FBZ0IsQ0FBNUMsRUFBK0M7QUFDOUNFLE1BQUFBLG1CQUFtQixDQUFDSSxhQUFwQixDQUFrQ3NCLFFBQWxDLENBQTJDLFVBQTNDLEVBQXVELElBQUllLElBQUosQ0FBU3VCLE1BQU0sR0FBRyxJQUFsQixDQUF2RCxFQUQ4QyxDQUU5QztBQUNBO0FBQ0QsR0FwTDBCO0FBcUwzQmpCLEVBQUFBLHdCQXJMMkIsc0NBcUxBO0FBQzFCLFFBQUkvQyxtQkFBbUIsQ0FBQ0MsUUFBcEIsQ0FBNkJULElBQTdCLENBQWtDLFdBQWxDLEVBQStDLFFBQS9DLE1BQTZELFdBQWpFLEVBQThFO0FBQzdFRixNQUFBQSxDQUFDLENBQUMsa0JBQUQsQ0FBRCxDQUFzQjRFLElBQXRCO0FBQ0E1RSxNQUFBQSxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1QjZFLElBQXZCO0FBQ0E3RSxNQUFBQSxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1Qm1DLFFBQXZCLENBQWdDLE9BQWhDO0FBQ0EsS0FKRCxNQUlPO0FBQ05uQyxNQUFBQSxDQUFDLENBQUMsa0JBQUQsQ0FBRCxDQUFzQjZFLElBQXRCO0FBQ0E3RSxNQUFBQSxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1QjRFLElBQXZCO0FBQ0FsRSxNQUFBQSxtQkFBbUIsQ0FBQ0MsUUFBcEIsQ0FBNkJULElBQTdCLENBQWtDLFdBQWxDLEVBQStDLFdBQS9DLEVBQTRELENBQUMsQ0FBN0Q7QUFDQTtBQUNELEdBL0wwQjs7QUFnTTNCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQzRFLEVBQUFBLGtCQXJNMkIsOEJBcU1SQyxNQXJNUSxFQXFNQTtBQUMxQjtBQUNBLFFBQUtBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZbEIsU0FBWixLQUEwQixFQUExQixJQUFnQ2lCLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZakIsT0FBWixLQUF3QixFQUF6RCxJQUNDZ0IsTUFBTSxDQUFDQyxJQUFQLENBQVlqQixPQUFaLEtBQXdCLEVBQXhCLElBQThCZ0IsTUFBTSxDQUFDQyxJQUFQLENBQVlsQixTQUFaLEtBQTBCLEVBRDdELEVBQ2tFO0FBQ2pFOUQsTUFBQUEsQ0FBQyxDQUFDLHNCQUFELENBQUQsQ0FBMEJpRixJQUExQixDQUErQnZELGVBQWUsQ0FBQ3dELDRCQUEvQyxFQUE2RU4sSUFBN0U7QUFDQU8sTUFBQUEsSUFBSSxDQUFDQyxhQUFMLENBQW1CQyxVQUFuQixDQUE4QixPQUE5QixFQUF1Q0MsV0FBdkMsQ0FBbUQsa0JBQW5EO0FBQ0EsYUFBTyxLQUFQO0FBQ0EsS0FQeUIsQ0FRMUI7OztBQUNBLFFBQUtQLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZixZQUFaLEdBQTJCLENBQTNCLElBQWdDYyxNQUFNLENBQUNDLElBQVAsQ0FBWWQsVUFBWixLQUEyQixJQUE1RCxJQUNDYSxNQUFNLENBQUNDLElBQVAsQ0FBWWQsVUFBWixHQUF5QixDQUF6QixJQUE4QmEsTUFBTSxDQUFDQyxJQUFQLENBQVlmLFlBQVosS0FBNkIsSUFEaEUsRUFDdUU7QUFDdEVqRSxNQUFBQSxDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQmlGLElBQTFCLENBQStCdkQsZUFBZSxDQUFDNkQsK0JBQS9DLEVBQWdGWCxJQUFoRjtBQUNBTyxNQUFBQSxJQUFJLENBQUNDLGFBQUwsQ0FBbUJDLFVBQW5CLENBQThCLE9BQTlCLEVBQXVDQyxXQUF2QyxDQUFtRCxrQkFBbkQ7QUFDQSxhQUFPLEtBQVA7QUFDQSxLQWR5QixDQWUxQjs7O0FBQ0EsUUFBS1AsTUFBTSxDQUFDQyxJQUFQLENBQVlRLFNBQVosQ0FBc0JoRixNQUF0QixHQUErQixDQUEvQixJQUFvQ3VFLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUyxPQUFaLENBQW9CakYsTUFBcEIsS0FBK0IsQ0FBcEUsSUFDQ3VFLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUyxPQUFaLENBQW9CakYsTUFBcEIsR0FBNkIsQ0FBN0IsSUFBa0N1RSxNQUFNLENBQUNDLElBQVAsQ0FBWVEsU0FBWixDQUFzQmhGLE1BQXRCLEtBQWlDLENBRHhFLEVBQzRFO0FBQzNFUixNQUFBQSxDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQmlGLElBQTFCLENBQStCdkQsZUFBZSxDQUFDTSw0QkFBL0MsRUFBNkU0QyxJQUE3RTtBQUNBTyxNQUFBQSxJQUFJLENBQUNDLGFBQUwsQ0FBbUJDLFVBQW5CLENBQThCLE9BQTlCLEVBQXVDQyxXQUF2QyxDQUFtRCxrQkFBbkQ7QUFFQSxhQUFPLEtBQVA7QUFDQSxLQXRCeUIsQ0F1QjFCOzs7QUFDQSxRQUFLUCxNQUFNLENBQUNDLElBQVAsQ0FBWVEsU0FBWixDQUFzQmhGLE1BQXRCLEdBQStCLENBQS9CLElBQW9DdUUsTUFBTSxDQUFDQyxJQUFQLENBQVlTLE9BQVosQ0FBb0JqRixNQUFwQixLQUErQixDQUFwRSxJQUNDdUUsTUFBTSxDQUFDQyxJQUFQLENBQVlTLE9BQVosQ0FBb0JqRixNQUFwQixHQUE2QixDQUE3QixJQUFrQ3VFLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUSxTQUFaLENBQXNCaEYsTUFBdEIsS0FBaUMsQ0FEeEUsRUFDNEU7QUFDM0VSLE1BQUFBLENBQUMsQ0FBQyxzQkFBRCxDQUFELENBQTBCaUYsSUFBMUIsQ0FBK0J2RCxlQUFlLENBQUNNLDRCQUEvQyxFQUE2RTRDLElBQTdFO0FBQ0FPLE1BQUFBLElBQUksQ0FBQ0MsYUFBTCxDQUFtQkMsVUFBbkIsQ0FBOEIsT0FBOUIsRUFBdUNDLFdBQXZDLENBQW1ELGtCQUFuRDtBQUVBLGFBQU8sS0FBUDtBQUNBLEtBOUJ5QixDQWdDMUI7OztBQUNBLFFBQUlQLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUSxTQUFaLEtBQTBCLEVBQTFCLElBQ0FULE1BQU0sQ0FBQ0MsSUFBUCxDQUFZUyxPQUFaLEtBQXdCLEVBRHhCLElBRUFWLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZixZQUFaLEtBQTZCLElBRjdCLElBR0FjLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZCxVQUFaLEtBQTJCLElBSDNCLElBSUFhLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZbEIsU0FBWixLQUEwQixFQUoxQixJQUtBaUIsTUFBTSxDQUFDQyxJQUFQLENBQVlqQixPQUFaLEtBQXdCLEVBTDVCLEVBS2dDO0FBQy9CL0QsTUFBQUEsQ0FBQyxDQUFDLHNCQUFELENBQUQsQ0FBMEJpRixJQUExQixDQUErQnZELGVBQWUsQ0FBQ2dFLDBCQUEvQyxFQUEyRWQsSUFBM0U7QUFDQU8sTUFBQUEsSUFBSSxDQUFDQyxhQUFMLENBQW1CQyxVQUFuQixDQUE4QixPQUE5QixFQUF1Q0MsV0FBdkMsQ0FBbUQsa0JBQW5EO0FBQ0EsYUFBTyxLQUFQO0FBQ0E7O0FBQ0QsV0FBT1AsTUFBUDtBQUNBLEdBalAwQjtBQWtQM0JZLEVBQUFBLGdCQWxQMkIsNEJBa1BWeEYsUUFsUFUsRUFrUEE7QUFDMUIsUUFBTTRFLE1BQU0sR0FBRzVFLFFBQWY7QUFDQUgsSUFBQUEsQ0FBQyxDQUFDLHNCQUFELENBQUQsQ0FBMEJpRixJQUExQixDQUErQixFQUEvQixFQUFtQ0osSUFBbkM7QUFDQUUsSUFBQUEsTUFBTSxDQUFDQyxJQUFQLEdBQWN0RSxtQkFBbUIsQ0FBQ0MsUUFBcEIsQ0FBNkJULElBQTdCLENBQWtDLFlBQWxDLENBQWQ7QUFDQSxRQUFNdUUsUUFBUSxHQUFHL0QsbUJBQW1CLENBQUNHLGVBQXBCLENBQW9DdUIsUUFBcEMsQ0FBNkMsVUFBN0MsQ0FBakI7O0FBQ0EsUUFBSXFDLFFBQVEsS0FBSyxJQUFqQixFQUF1QjtBQUN0QkEsTUFBQUEsUUFBUSxDQUFDbUIsUUFBVCxDQUFrQixDQUFsQixFQUFxQixDQUFyQixFQUF3QixDQUF4QixFQUEyQixDQUEzQjtBQUNBYixNQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWWxCLFNBQVosR0FBd0IrQixJQUFJLENBQUNDLEtBQUwsQ0FBV3JCLFFBQVEsQ0FBQ3NCLE9BQVQsS0FBcUIsSUFBaEMsQ0FBeEI7QUFDQTs7QUFDRCxRQUFNckIsTUFBTSxHQUFHaEUsbUJBQW1CLENBQUNJLGFBQXBCLENBQWtDc0IsUUFBbEMsQ0FBMkMsVUFBM0MsQ0FBZjs7QUFDQSxRQUFJc0MsTUFBTSxLQUFLLElBQWYsRUFBcUI7QUFDcEJBLE1BQUFBLE1BQU0sQ0FBQ2tCLFFBQVAsQ0FBZ0IsRUFBaEIsRUFBb0IsRUFBcEIsRUFBd0IsRUFBeEIsRUFBNEIsQ0FBNUI7QUFDQWIsTUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlqQixPQUFaLEdBQXNCOEIsSUFBSSxDQUFDQyxLQUFMLENBQVdwQixNQUFNLENBQUNxQixPQUFQLEtBQW1CLElBQTlCLENBQXRCO0FBQ0E7O0FBQ0QsV0FBT3JGLG1CQUFtQixDQUFDb0Usa0JBQXBCLENBQXVDQyxNQUF2QyxDQUFQO0FBQ0EsR0FqUTBCO0FBa1EzQmlCLEVBQUFBLGVBbFEyQiw2QkFrUVQsQ0FFakIsQ0FwUTBCO0FBcVEzQjNCLEVBQUFBLGNBclEyQiw0QkFxUVY7QUFDaEJjLElBQUFBLElBQUksQ0FBQ3hFLFFBQUwsR0FBZ0JELG1CQUFtQixDQUFDQyxRQUFwQztBQUNBd0UsSUFBQUEsSUFBSSxDQUFDYyxHQUFMLGFBQWNDLGFBQWQ7QUFDQWYsSUFBQUEsSUFBSSxDQUFDOUQsYUFBTCxHQUFxQlgsbUJBQW1CLENBQUNXLGFBQXpDO0FBQ0E4RCxJQUFBQSxJQUFJLENBQUNRLGdCQUFMLEdBQXdCakYsbUJBQW1CLENBQUNpRixnQkFBNUM7QUFDQVIsSUFBQUEsSUFBSSxDQUFDYSxlQUFMLEdBQXVCdEYsbUJBQW1CLENBQUNzRixlQUEzQztBQUNBYixJQUFBQSxJQUFJLENBQUNqRCxVQUFMO0FBQ0E7QUE1UTBCLENBQTVCO0FBK1FBbEMsQ0FBQyxDQUFDbUcsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBTTtBQUN2QjFGLEVBQUFBLG1CQUFtQixDQUFDd0IsVUFBcEI7QUFDQSxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1pa29QQlggLSBmcmVlIHBob25lIHN5c3RlbSBmb3Igc21hbGwgYnVzaW5lc3NcbiAqIENvcHlyaWdodCAoQykgMjAxNy0yMDIwIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG5cbi8qIGdsb2JhbCBnbG9iYWxSb290VXJsLGdsb2JhbFRyYW5zbGF0ZSwgRXh0ZW5zaW9ucywgRm9ybSwgU2VtYW50aWNMb2NhbGl6YXRpb24sIFNvdW5kRmlsZXNTZWxlY3RvciAqL1xuXG5cbiQuZm4uZm9ybS5zZXR0aW5ncy5ydWxlcy5jdXN0b21Ob3RFbXB0eUlmQWN0aW9uUnVsZSA9ICh2YWx1ZSwgYWN0aW9uKSA9PiB7XG5cdGlmICh2YWx1ZS5sZW5ndGggPT09IDAgJiYgJCgnI2FjdGlvbicpLnZhbCgpID09PSBhY3Rpb24pIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblx0cmV0dXJuIHRydWU7XG59O1xuXG5jb25zdCBvdXRPZldvcmtUaW1lUmVjb3JkID0ge1xuXHQkZm9ybU9iajogJCgnI3NhdmUtb3V0b2Zmd29yay1mb3JtJyksXG5cdCRkZWZhdWx0RHJvcGRvd246ICQoJyNzYXZlLW91dG9mZndvcmstZm9ybSAuZHJvcGRvd24tZGVmYXVsdCcpLFxuXHQkcmFuZ2VEYXlzU3RhcnQ6ICQoJyNyYW5nZS1kYXlzLXN0YXJ0JyksXG5cdCRyYW5nZURheXNFbmQ6ICQoJyNyYW5nZS1kYXlzLWVuZCcpLFxuXHQkcmFuZ2VUaW1lU3RhcnQ6ICQoJyNyYW5nZS10aW1lLXN0YXJ0JyksXG5cdCRyYW5nZVRpbWVFbmQ6ICQoJyNyYW5nZS10aW1lLWVuZCcpLFxuXHQkZGF0ZV9mcm9tOiAkKCcjZGF0ZV9mcm9tJyksXG5cdCRkYXRlX3RvOiAkKCcjZGF0ZV90bycpLFxuXHQkdGltZV90bzogJCgnI3RpbWVfdG8nKSxcblx0JGZvcndhcmRpbmdTZWxlY3REcm9wZG93bjogJCgnI3NhdmUtb3V0b2Zmd29yay1mb3JtIC5mb3J3YXJkaW5nLXNlbGVjdCcpLFxuXHR2YWxpZGF0ZVJ1bGVzOiB7XG5cdFx0YXVkaW9fbWVzc2FnZV9pZDoge1xuXHRcdFx0aWRlbnRpZmllcjogJ2F1ZGlvX21lc3NhZ2VfaWQnLFxuXHRcdFx0cnVsZXM6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHR5cGU6ICdjdXN0b21Ob3RFbXB0eUlmQWN0aW9uUnVsZVtwbGF5bWVzc2FnZV0nLFxuXHRcdFx0XHRcdHByb21wdDogZ2xvYmFsVHJhbnNsYXRlLnRmX1ZhbGlkYXRlQXVkaW9NZXNzYWdlRW1wdHksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdFx0ZXh0ZW5zaW9uOiB7XG5cdFx0XHRpZGVudGlmaWVyOiAnZXh0ZW5zaW9uJyxcblx0XHRcdHJ1bGVzOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR0eXBlOiAnY3VzdG9tTm90RW1wdHlJZkFjdGlvblJ1bGVbZXh0ZW5zaW9uXScsXG5cdFx0XHRcdFx0cHJvbXB0OiBnbG9iYWxUcmFuc2xhdGUudGZfVmFsaWRhdGVFeHRlbnNpb25FbXB0eSxcblx0XHRcdFx0fSxcblx0XHRcdF0sXG5cdFx0fSxcblx0XHR0aW1lZnJvbToge1xuXHRcdFx0b3B0aW9uYWw6IHRydWUsXG5cdFx0XHRpZGVudGlmaWVyOiAndGltZV9mcm9tJyxcblx0XHRcdHJ1bGVzOiBbe1xuXHRcdFx0XHR0eXBlOiAncmVnRXhwJyxcblx0XHRcdFx0dmFsdWU6IC9eKDJbMC0zXXwxP1swLTldKTooWzAtNV0/WzAtOV0pJC8sXG5cdFx0XHRcdHByb21wdDogZ2xvYmFsVHJhbnNsYXRlLnRmX1ZhbGlkYXRlQ2hlY2tUaW1lSW50ZXJ2YWwsXG5cdFx0XHR9XSxcblx0XHR9LFxuXHRcdHRpbWV0bzoge1xuXHRcdFx0aWRlbnRpZmllcjogJ3RpbWVfdG8nLFxuXHRcdFx0b3B0aW9uYWw6IHRydWUsXG5cdFx0XHRydWxlczogW3tcblx0XHRcdFx0dHlwZTogJ3JlZ0V4cCcsXG5cdFx0XHRcdHZhbHVlOiAvXigyWzAtM118MT9bMC05XSk6KFswLTVdP1swLTldKSQvLFxuXHRcdFx0XHRwcm9tcHQ6IGdsb2JhbFRyYW5zbGF0ZS50Zl9WYWxpZGF0ZUNoZWNrVGltZUludGVydmFsLFxuXHRcdFx0fV0sXG5cdFx0fSxcblx0fSxcblx0aW5pdGlhbGl6ZSgpIHtcblx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRkZWZhdWx0RHJvcGRvd24uZHJvcGRvd24oKTtcblx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNTdGFydC5jYWxlbmRhcih7XG5cdFx0XHRmaXJzdERheU9mV2VlazogU2VtYW50aWNMb2NhbGl6YXRpb24uY2FsZW5kYXJGaXJzdERheU9mV2Vlayxcblx0XHRcdHRleHQ6IFNlbWFudGljTG9jYWxpemF0aW9uLmNhbGVuZGFyVGV4dCxcblx0XHRcdGVuZENhbGVuZGFyOiBvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNFbmQsXG5cdFx0XHR0eXBlOiAnZGF0ZScsXG5cdFx0XHRpbmxpbmU6IGZhbHNlLFxuXHRcdFx0bW9udGhGaXJzdDogZmFsc2UsXG5cdFx0XHRyZWdFeHA6IFNlbWFudGljTG9jYWxpemF0aW9uLnJlZ0V4cCxcblx0XHR9KTtcblx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNFbmQuY2FsZW5kYXIoe1xuXHRcdFx0Zmlyc3REYXlPZldlZWs6IFNlbWFudGljTG9jYWxpemF0aW9uLmNhbGVuZGFyRmlyc3REYXlPZldlZWssXG5cdFx0XHR0ZXh0OiBTZW1hbnRpY0xvY2FsaXphdGlvbi5jYWxlbmRhclRleHQsXG5cdFx0XHRzdGFydENhbGVuZGFyOiBvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNTdGFydCxcblx0XHRcdHR5cGU6ICdkYXRlJyxcblx0XHRcdGlubGluZTogZmFsc2UsXG5cdFx0XHRtb250aEZpcnN0OiBmYWxzZSxcblx0XHRcdHJlZ0V4cDogU2VtYW50aWNMb2NhbGl6YXRpb24ucmVnRXhwLFxuXHRcdFx0b25DaGFuZ2U6IChuZXdEYXRlVG8pID0+IHtcblx0XHRcdFx0bGV0IG9sZERhdGVUbyA9IG91dE9mV29ya1RpbWVSZWNvcmQuJGRhdGVfdG8uYXR0cigndmFsdWUnKTtcblx0XHRcdFx0aWYgKG5ld0RhdGVUbyAhPT0gbnVsbCAmJiBvbGREYXRlVG8gIT09ICcnKSB7XG5cdFx0XHRcdFx0b2xkRGF0ZVRvID0gbmV3IERhdGUob2xkRGF0ZVRvICogMTAwMCk7XG5cdFx0XHRcdFx0aWYgKChuZXdEYXRlVG8gLSBvbGREYXRlVG8pICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRkYXRlX2Zyb20udHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdH0pO1xuXHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlVGltZVN0YXJ0LmNhbGVuZGFyKHtcblx0XHRcdGZpcnN0RGF5T2ZXZWVrOiBTZW1hbnRpY0xvY2FsaXphdGlvbi5jYWxlbmRhckZpcnN0RGF5T2ZXZWVrLFxuXHRcdFx0dGV4dDogU2VtYW50aWNMb2NhbGl6YXRpb24uY2FsZW5kYXJUZXh0LFxuXHRcdFx0ZW5kQ2FsZW5kYXI6IG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlVGltZUVuZCxcblx0XHRcdHR5cGU6ICd0aW1lJyxcblx0XHRcdGlubGluZTogZmFsc2UsXG5cdFx0XHRkaXNhYmxlTWludXRlOiB0cnVlLFxuXHRcdFx0YW1wbTogZmFsc2UsXG5cdFx0fSk7XG5cdFx0b3V0T2ZXb3JrVGltZVJlY29yZC4kcmFuZ2VUaW1lRW5kLmNhbGVuZGFyKHtcblx0XHRcdGZpcnN0RGF5T2ZXZWVrOiBTZW1hbnRpY0xvY2FsaXphdGlvbi5jYWxlbmRhckZpcnN0RGF5T2ZXZWVrLFxuXHRcdFx0dGV4dDogU2VtYW50aWNMb2NhbGl6YXRpb24uY2FsZW5kYXJUZXh0LFxuXHRcdFx0c3RhcnRDYWxlbmRhcjogb3V0T2ZXb3JrVGltZVJlY29yZC4kcmFuZ2VUaW1lU3RhcnQsXG5cdFx0XHR0eXBlOiAndGltZScsXG5cdFx0XHRpbmxpbmU6IGZhbHNlLFxuXHRcdFx0ZGlzYWJsZU1pbnV0ZTogdHJ1ZSxcblx0XHRcdGFtcG06IGZhbHNlLFxuXHRcdFx0b25DaGFuZ2U6IChuZXdUaW1lVG8pID0+IHtcblx0XHRcdFx0bGV0IG9sZFRpbWVUbyA9IG91dE9mV29ya1RpbWVSZWNvcmQuJHRpbWVfdG8uYXR0cigndmFsdWUnKTtcblx0XHRcdFx0aWYgKG5ld1RpbWVUbyAhPT0gbnVsbCAmJiBvbGRUaW1lVG8gIT09ICcnKSB7XG5cdFx0XHRcdFx0b2xkVGltZVRvID0gbmV3IERhdGUob2xkVGltZVRvICogMTAwMCk7XG5cdFx0XHRcdFx0aWYgKChuZXdUaW1lVG8gLSBvbGRUaW1lVG8pICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiR0aW1lX3RvLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHR9KTtcblx0XHQkKCcjYWN0aW9uJylcblx0XHRcdC5kcm9wZG93bih7XG5cdFx0XHRcdG9uQ2hhbmdlKCkge1xuXHRcdFx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQudG9nZ2xlRGlzYWJsZWRGaWVsZENsYXNzKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblx0XHQkKCcjd2Vla2RheV9mcm9tJylcblx0XHRcdC5kcm9wZG93bih7XG5cdFx0XHRcdG9uQ2hhbmdlKCkge1xuXHRcdFx0XHRcdGNvbnN0IGZyb20gPSBvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICd3ZWVrZGF5X2Zyb20nKTtcblx0XHRcdFx0XHRjb25zdCB0byA9IG91dE9mV29ya1RpbWVSZWNvcmQuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ3dlZWtkYXlfdG8nKTtcblx0XHRcdFx0XHRpZiAoZnJvbSA8IHRvIHx8IHRvID09PSAtMSB8fCBmcm9tID09PSAtMSkge1xuXHRcdFx0XHRcdFx0b3V0T2ZXb3JrVGltZVJlY29yZC4kZm9ybU9iai5mb3JtKCdzZXQgdmFsdWUnLCAnd2Vla2RheV90bycsIGZyb20pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdH0pO1xuXHRcdCQoJyN3ZWVrZGF5X3RvJylcblx0XHRcdC5kcm9wZG93bih7XG5cdFx0XHRcdG9uQ2hhbmdlKCkge1xuXHRcdFx0XHRcdGNvbnN0IGZyb20gPSBvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICd3ZWVrZGF5X2Zyb20nKTtcblx0XHRcdFx0XHRjb25zdCB0byA9IG91dE9mV29ya1RpbWVSZWNvcmQuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ3dlZWtkYXlfdG8nKTtcblx0XHRcdFx0XHRpZiAodG8gPCBmcm9tIHx8IGZyb20gPT09IC0xKSB7XG5cdFx0XHRcdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ3NldCB2YWx1ZScsICd3ZWVrZGF5X2Zyb20nLCB0byk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXHRcdFx0fSk7XG5cblx0XHQkKCcjZXJhc2UtZGF0ZXMnKS5vbignY2xpY2snLCAoZSkgPT4ge1xuXHRcdFx0b3V0T2ZXb3JrVGltZVJlY29yZC4kcmFuZ2VEYXlzU3RhcnQuY2FsZW5kYXIoJ2NsZWFyJyk7XG5cdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNFbmQuY2FsZW5kYXIoJ2NsZWFyJyk7XG5cdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqXG5cdFx0XHRcdC5mb3JtKCdzZXQgdmFsdWVzJywge1xuXHRcdFx0XHRcdGRhdGVfZnJvbTogJycsXG5cdFx0XHRcdFx0ZGF0ZV90bzogJycsXG5cdFx0XHRcdH0pO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH0pO1xuXG5cdFx0JCgnI2VyYXNlLXdlZWtkYXlzJykub24oJ2NsaWNrJywgKGUpID0+IHtcblx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJGZvcm1PYmpcblx0XHRcdFx0LmZvcm0oJ3NldCB2YWx1ZXMnLCB7XG5cdFx0XHRcdFx0d2Vla2RheV9mcm9tOiAtMSxcblx0XHRcdFx0XHR3ZWVrZGF5X3RvOiAtMSxcblx0XHRcdFx0fSk7XG5cdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNTdGFydC50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9KTtcblx0XHQkKCcjZXJhc2UtdGltZXBlcmlvZCcpLm9uKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZVRpbWVTdGFydC5jYWxlbmRhcignY2xlYXInKTtcblx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlVGltZUVuZC5jYWxlbmRhcignY2xlYXInKTtcblx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJHRpbWVfdG8udHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fSk7XG5cblx0XHQkKCcjc2F2ZS1vdXRvZmZ3b3JrLWZvcm0gLmF1ZGlvLW1lc3NhZ2Utc2VsZWN0JykuZHJvcGRvd24oU291bmRGaWxlc1NlbGVjdG9yLmdldERyb3Bkb3duU2V0dGluZ3NXaXRoRW1wdHkoKSk7XG5cblx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLmluaXRpYWxpemVGb3JtKCk7XG5cdFx0b3V0T2ZXb3JrVGltZVJlY29yZC4kZm9yd2FyZGluZ1NlbGVjdERyb3Bkb3duLmRyb3Bkb3duKEV4dGVuc2lvbnMuZ2V0RHJvcGRvd25TZXR0aW5nc1dpdGhvdXRFbXB0eSgpKTtcblx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLnRvZ2dsZURpc2FibGVkRmllbGRDbGFzcygpO1xuXHRcdG91dE9mV29ya1RpbWVSZWNvcmQuY2hhbmdlRGF0ZUZvcm1hdCgpO1xuXHR9LFxuXHQvKipcblx0ICog0JzQtdC90Y/QtdGCINC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1INC00LDRgtGLINC90LDRh9Cw0LvQsCDQuCDQtNCw0YLRiyDQvtC60L7QvdGH0LDQvdC40Y8g0LjQtyBsaW51eHRpbWUg0LIg0LvQvtC60LDQu9GM0L3QvtC1INC/0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1XG5cdCAqL1xuXHRjaGFuZ2VEYXRlRm9ybWF0KCkge1xuXHRcdGNvbnN0IGRhdGVGcm9tID0gb3V0T2ZXb3JrVGltZVJlY29yZC4kZGF0ZV9mcm9tLmF0dHIoJ3ZhbHVlJyk7XG5cdFx0Y29uc3QgZGF0ZVRvID0gb3V0T2ZXb3JrVGltZVJlY29yZC4kZGF0ZV90by5hdHRyKCd2YWx1ZScpO1xuXHRcdGlmIChkYXRlRnJvbSAhPT0gdW5kZWZpbmVkICYmIGRhdGVGcm9tLmxlbmd0aCA+IDApIHtcblx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlRGF5c1N0YXJ0LmNhbGVuZGFyKCdzZXQgZGF0ZScsIG5ldyBEYXRlKGRhdGVGcm9tICogMTAwMCkpO1xuXHRcdFx0Ly8gb3V0T2ZXb3JrVGltZVJlY29yZC4kZm9ybU9iai5mb3JtKCdzZXQgdmFsdWUnLCAnZGF0ZV9mcm9tJywgZGF0ZUZyb20pO1xuXHRcdH1cblx0XHRpZiAoZGF0ZVRvICE9PSB1bmRlZmluZWQgJiYgZGF0ZVRvLmxlbmd0aCA+IDApIHtcblx0XHRcdG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlRGF5c0VuZC5jYWxlbmRhcignc2V0IGRhdGUnLCBuZXcgRGF0ZShkYXRlVG8gKiAxMDAwKSk7XG5cdFx0XHQvLyBvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ3NldCB2YWx1ZScsICdkYXRlX3RvJywgZGF0ZVRvKTtcblx0XHR9XG5cdH0sXG5cdHRvZ2dsZURpc2FibGVkRmllbGRDbGFzcygpIHtcblx0XHRpZiAob3V0T2ZXb3JrVGltZVJlY29yZC4kZm9ybU9iai5mb3JtKCdnZXQgdmFsdWUnLCAnYWN0aW9uJykgPT09ICdleHRlbnNpb24nKSB7XG5cdFx0XHQkKCcjZXh0ZW5zaW9uLWdyb3VwJykuc2hvdygpO1xuXHRcdFx0JCgnI2F1ZGlvLWZpbGUtZ3JvdXAnKS5oaWRlKCk7XG5cdFx0XHQkKCcjYXVkaW9fbWVzc2FnZV9pZCcpLmRyb3Bkb3duKCdjbGVhcicpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQkKCcjZXh0ZW5zaW9uLWdyb3VwJykuaGlkZSgpO1xuXHRcdFx0JCgnI2F1ZGlvLWZpbGUtZ3JvdXAnKS5zaG93KCk7XG5cdFx0XHRvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ3NldCB2YWx1ZScsICdleHRlbnNpb24nLCAtMSk7XG5cdFx0fVxuXHR9LFxuXHQvKipcblx0ICog0JrQsNGB0YLQvtC80L3QsNGPINC/0YDQvtCy0LXRgNC60LAg0L/QvtC70LXQuSDRhNC+0YDQvNGLLCDQutC+0YLQvtGA0YvQtSDQvdC1INC/0L7Qu9GD0YfQsNC10YLRgdGPINGB0LTQtdC70LDRgtGMINGH0LXRgNC10Lcg0LLQsNC70LjQtNCw0YbQuNGOXG5cdCAqIEBwYXJhbSByZXN1bHRcblx0ICogQHJldHVybnMgeyp9XG5cdCAqL1xuXHRjdXN0b21WYWxpZGF0ZUZvcm0ocmVzdWx0KSB7XG5cdFx0Ly8g0J/RgNC+0LLQtdGA0LjQvCDQv9C+0LvRjyDQtNCw0YLRi1xuXHRcdGlmICgocmVzdWx0LmRhdGEuZGF0ZV9mcm9tICE9PSAnJyAmJiByZXN1bHQuZGF0YS5kYXRlX3RvID09PSAnJylcblx0XHRcdHx8IChyZXN1bHQuZGF0YS5kYXRlX3RvICE9PSAnJyAmJiByZXN1bHQuZGF0YS5kYXRlX2Zyb20gPT09ICcnKSkge1xuXHRcdFx0JCgnLmZvcm0gLmVycm9yLm1lc3NhZ2UnKS5odG1sKGdsb2JhbFRyYW5zbGF0ZS50Zl9WYWxpZGF0ZUNoZWNrRGF0ZUludGVydmFsKS5zaG93KCk7XG5cdFx0XHRGb3JtLiRzdWJtaXRCdXR0b24udHJhbnNpdGlvbignc2hha2UnKS5yZW1vdmVDbGFzcygnbG9hZGluZyBkaXNhYmxlZCcpO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHQvLyDQn9GA0L7QstC10YDQuNC8INC/0L7Qu9GPINC00L3QtdC5INC90LXQtNC10LvQuFxuXHRcdGlmICgocmVzdWx0LmRhdGEud2Vla2RheV9mcm9tID4gMCAmJiByZXN1bHQuZGF0YS53ZWVrZGF5X3RvID09PSAnLTEnKVxuXHRcdFx0fHwgKHJlc3VsdC5kYXRhLndlZWtkYXlfdG8gPiAwICYmIHJlc3VsdC5kYXRhLndlZWtkYXlfZnJvbSA9PT0gJy0xJykpIHtcblx0XHRcdCQoJy5mb3JtIC5lcnJvci5tZXNzYWdlJykuaHRtbChnbG9iYWxUcmFuc2xhdGUudGZfVmFsaWRhdGVDaGVja1dlZWtEYXlJbnRlcnZhbCkuc2hvdygpO1xuXHRcdFx0Rm9ybS4kc3VibWl0QnV0dG9uLnRyYW5zaXRpb24oJ3NoYWtlJykucmVtb3ZlQ2xhc3MoJ2xvYWRpbmcgZGlzYWJsZWQnKTtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0Ly8g0J/RgNC+0LLQtdGA0LjQvCDQv9C+0LvRjyDQstGA0LXQvNC10L3QuFxuXHRcdGlmICgocmVzdWx0LmRhdGEudGltZV9mcm9tLmxlbmd0aCA+IDAgJiYgcmVzdWx0LmRhdGEudGltZV90by5sZW5ndGggPT09IDApXG5cdFx0XHR8fCAocmVzdWx0LmRhdGEudGltZV90by5sZW5ndGggPiAwICYmIHJlc3VsdC5kYXRhLnRpbWVfZnJvbS5sZW5ndGggPT09IDApKSB7XG5cdFx0XHQkKCcuZm9ybSAuZXJyb3IubWVzc2FnZScpLmh0bWwoZ2xvYmFsVHJhbnNsYXRlLnRmX1ZhbGlkYXRlQ2hlY2tUaW1lSW50ZXJ2YWwpLnNob3coKTtcblx0XHRcdEZvcm0uJHN1Ym1pdEJ1dHRvbi50cmFuc2l0aW9uKCdzaGFrZScpLnJlbW92ZUNsYXNzKCdsb2FkaW5nIGRpc2FibGVkJyk7XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0Ly8g0J/RgNC+0LLQtdGA0LjQvCDQv9C+0LvRjyDQstGA0LXQvNC10L3QuCDQvdCwINGB0L7QsdC70Y7QtNC10L3QuNC1INGE0L7RgNC80LDRgtGDXG5cdFx0aWYgKChyZXN1bHQuZGF0YS50aW1lX2Zyb20ubGVuZ3RoID4gMCAmJiByZXN1bHQuZGF0YS50aW1lX3RvLmxlbmd0aCA9PT0gMClcblx0XHRcdHx8IChyZXN1bHQuZGF0YS50aW1lX3RvLmxlbmd0aCA+IDAgJiYgcmVzdWx0LmRhdGEudGltZV9mcm9tLmxlbmd0aCA9PT0gMCkpIHtcblx0XHRcdCQoJy5mb3JtIC5lcnJvci5tZXNzYWdlJykuaHRtbChnbG9iYWxUcmFuc2xhdGUudGZfVmFsaWRhdGVDaGVja1RpbWVJbnRlcnZhbCkuc2hvdygpO1xuXHRcdFx0Rm9ybS4kc3VibWl0QnV0dG9uLnRyYW5zaXRpb24oJ3NoYWtlJykucmVtb3ZlQ2xhc3MoJ2xvYWRpbmcgZGlzYWJsZWQnKTtcblxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vINCf0YDQvtCy0LXRgNC40Lwg0LLRgdC1INC/0L7Qu9GPXG5cdFx0aWYgKHJlc3VsdC5kYXRhLnRpbWVfZnJvbSA9PT0gJydcblx0XHRcdCYmIHJlc3VsdC5kYXRhLnRpbWVfdG8gPT09ICcnXG5cdFx0XHQmJiByZXN1bHQuZGF0YS53ZWVrZGF5X2Zyb20gPT09ICctMSdcblx0XHRcdCYmIHJlc3VsdC5kYXRhLndlZWtkYXlfdG8gPT09ICctMSdcblx0XHRcdCYmIHJlc3VsdC5kYXRhLmRhdGVfZnJvbSA9PT0gJydcblx0XHRcdCYmIHJlc3VsdC5kYXRhLmRhdGVfdG8gPT09ICcnKSB7XG5cdFx0XHQkKCcuZm9ybSAuZXJyb3IubWVzc2FnZScpLmh0bWwoZ2xvYmFsVHJhbnNsYXRlLnRmX1ZhbGlkYXRlTm9SdWxlc1NlbGVjdGVkKS5zaG93KCk7XG5cdFx0XHRGb3JtLiRzdWJtaXRCdXR0b24udHJhbnNpdGlvbignc2hha2UnKS5yZW1vdmVDbGFzcygnbG9hZGluZyBkaXNhYmxlZCcpO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9LFxuXHRjYkJlZm9yZVNlbmRGb3JtKHNldHRpbmdzKSB7XG5cdFx0Y29uc3QgcmVzdWx0ID0gc2V0dGluZ3M7XG5cdFx0JCgnLmZvcm0gLmVycm9yLm1lc3NhZ2UnKS5odG1sKCcnKS5oaWRlKCk7XG5cdFx0cmVzdWx0LmRhdGEgPSBvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZXMnKTtcblx0XHRjb25zdCBkYXRlRnJvbSA9IG91dE9mV29ya1RpbWVSZWNvcmQuJHJhbmdlRGF5c1N0YXJ0LmNhbGVuZGFyKCdnZXQgZGF0ZScpO1xuXHRcdGlmIChkYXRlRnJvbSAhPT0gbnVsbCkge1xuXHRcdFx0ZGF0ZUZyb20uc2V0SG91cnMoMCwgMCwgMCwgMCk7XG5cdFx0XHRyZXN1bHQuZGF0YS5kYXRlX2Zyb20gPSBNYXRoLnJvdW5kKGRhdGVGcm9tLmdldFRpbWUoKSAvIDEwMDApO1xuXHRcdH1cblx0XHRjb25zdCBkYXRlVG8gPSBvdXRPZldvcmtUaW1lUmVjb3JkLiRyYW5nZURheXNFbmQuY2FsZW5kYXIoJ2dldCBkYXRlJyk7XG5cdFx0aWYgKGRhdGVUbyAhPT0gbnVsbCkge1xuXHRcdFx0ZGF0ZVRvLnNldEhvdXJzKDIzLCA1OSwgNTksIDApO1xuXHRcdFx0cmVzdWx0LmRhdGEuZGF0ZV90byA9IE1hdGgucm91bmQoZGF0ZVRvLmdldFRpbWUoKSAvIDEwMDApO1xuXHRcdH1cblx0XHRyZXR1cm4gb3V0T2ZXb3JrVGltZVJlY29yZC5jdXN0b21WYWxpZGF0ZUZvcm0ocmVzdWx0KTtcblx0fSxcblx0Y2JBZnRlclNlbmRGb3JtKCkge1xuXG5cdH0sXG5cdGluaXRpYWxpemVGb3JtKCkge1xuXHRcdEZvcm0uJGZvcm1PYmogPSBvdXRPZldvcmtUaW1lUmVjb3JkLiRmb3JtT2JqO1xuXHRcdEZvcm0udXJsID0gYCR7Z2xvYmFsUm9vdFVybH1vdXQtb2ZmLXdvcmstdGltZS9zYXZlYDtcblx0XHRGb3JtLnZhbGlkYXRlUnVsZXMgPSBvdXRPZldvcmtUaW1lUmVjb3JkLnZhbGlkYXRlUnVsZXM7XG5cdFx0Rm9ybS5jYkJlZm9yZVNlbmRGb3JtID0gb3V0T2ZXb3JrVGltZVJlY29yZC5jYkJlZm9yZVNlbmRGb3JtO1xuXHRcdEZvcm0uY2JBZnRlclNlbmRGb3JtID0gb3V0T2ZXb3JrVGltZVJlY29yZC5jYkFmdGVyU2VuZEZvcm07XG5cdFx0Rm9ybS5pbml0aWFsaXplKCk7XG5cdH0sXG59O1xuXG4kKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG5cdG91dE9mV29ya1RpbWVSZWNvcmQuaW5pdGlhbGl6ZSgpO1xufSk7XG4iXX0=